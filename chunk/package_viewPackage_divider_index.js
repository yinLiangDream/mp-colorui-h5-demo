(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{"66":function(e,t,o){"use strict";o.r(t),o.d(t,"default",function(){return a});var r=o(0),n=o(1),i=o(74),l=o(221),c=function(){function defineProperties(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,o){return t&&defineProperties(e.prototype,t),o&&defineProperties(e,o),e}}(),p=function get(e,t,o){null===e&&(e=Function.prototype);var r=Object.getOwnPropertyDescriptor(e,t);if(void 0===r){var n=Object.getPrototypeOf(e);return null===n?void 0:get(n,t,o)}if("value"in r)return r.value;var i=r.get;return void 0!==i?i.call(o):void 0};function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}var a=function(e){function Divider(){var e,t,o;!function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,Divider);for(var r=arguments.length,n=Array(r),i=0;i<r;i++)n[i]=arguments[i];return t=o=_possibleConstructorReturn(this,(e=Divider.__proto__||Object.getPrototypeOf(Divider)).call.apply(e,[this].concat(n))),o.config={"navigationBarTitleText":"Divider 分割线"},_possibleConstructorReturn(o,t)}return function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{"constructor":{"value":e,"enumerable":!1,"writable":!0,"configurable":!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(Divider,n["a"].Component),c(Divider,[{"key":"render","value":function render(){return r.l.createElement(l.a,null,r.l.createElement(i.R,{"title":"基本","textColor":"black","type":"icon"}),r.l.createElement(i.j,null,"我是分割线"),r.l.createElement(i.R,{"title":"颜色","textColor":"black","type":"icon"}),r.l.createElement(i.j,{"color":"red"},"我是分割线"),r.l.createElement(i.j,{"color":"yellow"},"我是分割线"),r.l.createElement(i.j,{"color":"blue"},"我是分割线"),r.l.createElement(i.R,{"title":"大小","textColor":"black","type":"icon"}),r.l.createElement(i.j,{"size":"xsmall"},"我是分割线"),r.l.createElement(i.j,{"size":"normal"},"我是分割线"),r.l.createElement(i.j,{"size":"xxlarge"},"我是分割线"))}},{"key":"componentDidMount","value":function componentDidMount(){p(Divider.prototype.__proto__||Object.getPrototypeOf(Divider.prototype),"componentDidMount",this)&&p(Divider.prototype.__proto__||Object.getPrototypeOf(Divider.prototype),"componentDidMount",this).call(this)}},{"key":"componentDidShow","value":function componentDidShow(){p(Divider.prototype.__proto__||Object.getPrototypeOf(Divider.prototype),"componentDidShow",this)&&p(Divider.prototype.__proto__||Object.getPrototypeOf(Divider.prototype),"componentDidShow",this).call(this)}},{"key":"componentDidHide","value":function componentDidHide(){p(Divider.prototype.__proto__||Object.getPrototypeOf(Divider.prototype),"componentDidHide",this)&&p(Divider.prototype.__proto__||Object.getPrototypeOf(Divider.prototype),"componentDidHide",this).call(this)}}]),Divider}();a.config={"navigationBarTitleText":"Divider 分割线"}}}]);