(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{"45":function(e,t,n){"use strict";n.r(t);var r=n(0),o=n(2),i=n(69),l=n(70);n.d(t,"default",function(){return p});var a=function(){function defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&defineProperties(e.prototype,t),n&&defineProperties(e,n),e}}(),c=function get(e,t,n){null===e&&(e=Function.prototype);var r=Object.getOwnPropertyDescriptor(e,t);if(void 0===r){var o=Object.getPrototypeOf(e);return null===o?void 0:get(o,t,n)}if("value"in r)return r.value;var i=r.get;return void 0!==i?i.call(n):void 0};var p=function(e){function Tip(){return function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,Tip),function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(Tip.__proto__||Object.getPrototypeOf(Tip)).apply(this,arguments))}return function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{"constructor":{"value":e,"enumerable":!1,"writable":!0,"configurable":!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(Tip,o["a"].Component),a(Tip,[{"key":"render","value":function render(){var e=r.l.createElement(i.s,null,r.l.createElement(i.a,{"title":"我是手风琴组件"},r.l.createElement(i.s,{"padding":"normal","paddingDirection":"around"},r.l.createElement(i.f,{"type":"full"},r.l.createElement(i.L,{"text":"道可道，非常道。名可名，非常名。无名天地之始。有名万物之母。","textColor":"blue"})),r.l.createElement(i.f,{"type":"full"},r.l.createElement(i.L,{"text":"有无相生，难易相成，长短相形，高下相盈，音声相和，前后相随。恒也。","textColor":"brown"})),r.l.createElement(i.f,{"type":"full"},r.l.createElement(i.L,{"text":"上善若水。水善利万物而不争，处众人之所恶，故几于道。","textColor":"red"})),r.l.createElement(i.f,{"type":"full"},r.l.createElement(i.L,{"text":"道生一，一生二，二生三，三生万物。万物负阴而抱阳，冲气以为和。"})))));return r.l.createElement(i.s,null,r.l.createElement(i.O,{"title":"方向","type":"icon"}),r.l.createElement(i.s,{"padding":"normal","paddingDirection":"around"},r.l.createElement(i.k,{"justify":"between"},r.l.createElement(i.N,{"message":"我是上方提示","direction":"top"},r.l.createElement(i.e,{"text":"上方","shape":"round"})),r.l.createElement(i.N,{"message":"我是右方提示","direction":"right"},r.l.createElement(i.e,{"text":"右方","shape":"round"})),r.l.createElement(i.N,{"message":"我是左方提示","direction":"left"},r.l.createElement(i.e,{"text":"左方","shape":"round"})),r.l.createElement(i.N,{"message":"我是下方提示","direction":"bottom"},r.l.createElement(i.e,{"text":"下方","shape":"round"})))),r.l.createElement(i.s,{"padding":"normal","paddingDirection":"vertical"},r.l.createElement(l.a,{"code":"\n```\n<ClTip message='我是上方提示' direction='top'>\n  <ClButton text='上方' shape='round' />\n</ClTip>\n\n<ClTip message='我是右方提示' direction='right'>\n  <ClButton text='右方' shape='round' />\n</ClTip>\n\n<ClTip message='我是左方提示' direction='left'>\n  <ClButton text='左方' shape='round' />\n</ClTip>\n\n<ClTip message='我是下方提示' direction='bottom'>\n  <ClButton text='下方' shape='round' />\n</ClTip>\n```\n"})),r.l.createElement(i.O,{"title":"触发方式","type":"icon"}),r.l.createElement(i.s,{"padding":"normal","paddingDirection":"around"},r.l.createElement(i.k,{"justify":"around"},r.l.createElement(i.N,{"message":"我是点击触发","direction":"top","mode":"click"},r.l.createElement(i.e,{"text":"点击触发","shape":"round"})),r.l.createElement(i.N,{"message":"我是触摸触发","direction":"right"},r.l.createElement(i.e,{"text":"触摸触发","shape":"round"})))),r.l.createElement(i.s,{"padding":"normal","paddingDirection":"vertical"},r.l.createElement(l.a,{"code":"\n```\n<ClTip message='我是点击触发' direction='top' mode='click'>\n  <ClButton text='点击触发' shape='round' />\n</ClTip>\n\n<ClTip message='我是触摸触发' direction='right'>\n  <ClButton text='触摸触发' shape='round' />\n</ClTip>\n```\n"})),r.l.createElement(i.O,{"title":"自适应","type":"icon"}),r.l.createElement(i.s,{"padding":"normal","paddingDirection":"around"},r.l.createElement(i.k,{"justify":"around"},r.l.createElement(i.N,{"message":"我本应该左侧出现，但是自动检测到左侧距离不够，所以自动转换成右侧触发，上下亦是如此","direction":"left"},r.l.createElement(i.e,{"text":"左侧出现","shape":"round"})),r.l.createElement(i.N,{"message":"我本应该右侧出现，但是自动检测到右侧距离不够，所以自动转换成左侧触发，上下亦是如此","direction":"right"},r.l.createElement(i.e,{"text":"右侧出现","shape":"round"})))),r.l.createElement(i.s,{"padding":"normal","paddingDirection":"vertical"},r.l.createElement(l.a,{"code":"\n```\n<ClTip message='我本应该左侧出现，但是自动检测到左侧距离不够，所以自动转换成右侧触发，上下亦是如此' direction='left'>\n  <ClButton text='左侧出现' shape='round' />\n</ClTip>\n\n<ClTip message='我本应该右侧出现，但是自动检测到右侧距离不够，所以自动转换成左侧触发，上下亦是如此' direction='right'>\n  <ClButton text='右侧出现' shape='round' />\n</ClTip>\n```\n"})),r.l.createElement(i.O,{"title":"背景色","type":"icon"}),r.l.createElement(i.s,{"padding":"normal","paddingDirection":"around"},r.l.createElement(i.k,{"justify":"between"},r.l.createElement(i.N,{"message":"我是上方提示","direction":"top","bgColor":"gradualBlue"},r.l.createElement(i.e,{"text":"上方","shape":"round"})),r.l.createElement(i.N,{"message":"我是右方提示","direction":"right","bgColor":"black"},r.l.createElement(i.e,{"text":"右方","shape":"round"})),r.l.createElement(i.N,{"message":"我是左方提示","direction":"left","bgColor":"gradualRed"},r.l.createElement(i.e,{"text":"左方","shape":"round"})),r.l.createElement(i.N,{"message":"我是下方提示","direction":"bottom","bgColor":"light-olive"},r.l.createElement(i.e,{"text":"下方","shape":"round"})))),r.l.createElement(i.s,{"padding":"normal","paddingDirection":"vertical"},r.l.createElement(l.a,{"code":"\n```\n<ClTip message='我是上方提示' direction='top' bgColor='gradualBlue'>\n  <ClButton text='上方' shape='round' />\n</ClTip>\n\n<ClTip message='我是右方提示' direction='right' bgColor='black'>\n  <ClButton text='右方' shape='round' />\n</ClTip>\n\n<ClTip message='我是左方提示' direction='left' bgColor='gradualRed'>\n  <ClButton text='左方' shape='round' />\n</ClTip>\n\n<ClTip message='我是下方提示' direction='bottom' bgColor='light-olive'>\n  <ClButton text='下方' shape='round' />\n</ClTip>\n```\n"})),r.l.createElement(i.O,{"title":"自定义渲染","type":"icon"}),r.l.createElement(i.s,{"padding":"normal","paddingDirection":"around"},r.l.createElement(i.k,{"justify":"between"},r.l.createElement(i.N,{"renderMessage":e,"direction":"top","bgColor":"gradualBlue","mode":"click","width":350},r.l.createElement(i.e,{"text":"渲染的内容","shape":"round"})))),r.l.createElement(i.s,{"padding":"normal","paddingDirection":"vertical"},r.l.createElement(l.a,{"code":"\n```\nconst renderMessage = <View>...</View>\n\n<ClTip renderMessage={renderMessage} direction='top' bgColor='gradualBlue' mode='click' width={350}>\n  <ClButton text='渲染的内容' shape='round' />\n</ClTip>\n```\n"})),r.l.createElement(i.O,{"title":"长度","type":"icon"}),r.l.createElement(i.s,{"padding":"normal","paddingDirection":"around"},r.l.createElement(i.k,{"justify":"between"},r.l.createElement(i.N,{"message":"是时候表演真正的技术了","direction":"right"},r.l.createElement(i.e,{"text":"默认长度","shape":"round"})),r.l.createElement(i.N,{"message":"是时候表演真正的技术了","direction":"left","width":200},r.l.createElement(i.e,{"text":"长度200","shape":"round"})))),r.l.createElement(i.s,{"padding":"normal","paddingDirection":"vertical"},r.l.createElement(l.a,{"code":"\n```\n<ClTip message='是时候表演真正的技术了' direction='right'>\n  <ClButton text='默认长度' shape='round' />\n</ClTip>\n\n<ClTip message='是时候表演真正的技术了' direction='left' width={200}>\n  <ClButton text='长度200' shape='round' />\n</ClTip>\n```\n"})))}},{"key":"componentDidMount","value":function componentDidMount(){c(Tip.prototype.__proto__||Object.getPrototypeOf(Tip.prototype),"componentDidMount",this)&&c(Tip.prototype.__proto__||Object.getPrototypeOf(Tip.prototype),"componentDidMount",this).call(this)}},{"key":"componentDidShow","value":function componentDidShow(){c(Tip.prototype.__proto__||Object.getPrototypeOf(Tip.prototype),"componentDidShow",this)&&c(Tip.prototype.__proto__||Object.getPrototypeOf(Tip.prototype),"componentDidShow",this).call(this)}},{"key":"componentDidHide","value":function componentDidHide(){c(Tip.prototype.__proto__||Object.getPrototypeOf(Tip.prototype),"componentDidHide",this)&&c(Tip.prototype.__proto__||Object.getPrototypeOf(Tip.prototype),"componentDidHide",this).call(this)}}]),Tip}();p.config={"navigationBarTitleText":"Tip 提示"}},"70":function(e,t,n){"use strict";n.d(t,"a",function(){return c});var r=n(0),o=n(2),i=n(69),l=n(72),a=function(){function defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(e,t,n){return t&&defineProperties(e.prototype,t),n&&defineProperties(e,n),e}}();var c=function(e){function GenerateCode(){return function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,GenerateCode),function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(GenerateCode.__proto__||Object.getPrototypeOf(GenerateCode)).apply(this,arguments))}return function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{"constructor":{"value":e,"enumerable":!1,"writable":!0,"configurable":!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(GenerateCode,o["a"].Component),a(GenerateCode,[{"key":"render","value":function render(){var e=this.props;return r.l.createElement(i.s,{"padding":"normal","paddingDirection":"bottom"},r.l.createElement(i.a,{"title":"示例代码","card":!0},r.l.createElement(i.s,{"padding":"normal","paddingDirection":"around"},r.l.createElement(l.a,{"raw":!1,"richText":e.code,"type":"markdown"}))))}}]),GenerateCode}();c.defaultProps={"code":""}}}]);